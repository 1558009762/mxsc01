/*
 * Copyright (C) 2013, Broadcom Corporation. All Rights Reserved.
 * 
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
/*
* Northstar PCI-Express driver
* Only supports Root-Complex (RC) mode
*
* Notes:
* PCI Domains are being used to identify the PCIe port 1:1.
*
* Only MEM access is supported, PAX does not support IO.
*
* TODO:
*	MSI interrupts,
*	DRAM > 128 MBytes (e.g. DMA zones)
*/

#ifndef _PCIE_AER_IPROC_H_
#define _PCIE_AER_IPROC_H_

/*
 * Register offset definitions
 */



/* PCIE ROOT COMPLEX AER register definition and functions */
#define RC_AER_ADV_ERR_CAP_REG_OFFSET		0x100
#define RC_AER_UCORR_ERR_STATUS_REG_OFFSET	0x104
#define RC_AER_UCORR_ERR_MASK_REG_OFFSET	0x108
#define RC_AER_UCORR_ERR_SEVR_REG_OFFSET	0x10c
#define RC_AER_CORR_ERR_STATUS_REG_OFFSET	0x110
#define RC_AER_CORR_ERR_MASK_REG_OFFSET		0x114
#define RC_AER_ADV_ERR_CAP_CONTROL_REG_OFFSET	0x118
#define RC_AER_HEADER_LOG1_REG_OFFSET		0x11c
#define RC_AER_HEADER_LOG2_REG_OFFSET		0x120
#define RC_AER_HEADER_LOG3_REG_OFFSET		0x124
#define RC_AER_HEADER_LOG4_REG_OFFSET		0x128
#define RC_AER_ROOT_ERR_COMMAND_REG_OFFSET	0x12c
#define RC_AER_ROOT_ERR_STATUS_REG_OFFSET	0x130
#define RC_AER_ROOT_ERR_ID_REG_OFFSET		0x134

/* PCIE End Point AER register definition and functions */
#define EP_AER_ADV_ERR_CAP_REG_OFFSET		0x100
#define EP_AER_UCORR_ERR_STATUS_REG_OFFSET	0x104
#define EP_AER_UCORR_ERR_MASK_REG_OFFSET	0x108
#define EP_AER_UCORR_ERR_SEVR_REG_OFFSET	0x10c
#define EP_AER_CORR_ERR_STATUS_REG_OFFSET	0x110
#define EP_AER_CORR_ERR_MASK_REG_OFFSET		0x114
#define EP_AER_ADV_ERR_CAP_CONTROL_REG_OFFSET	0x118
#define EP_AER_HEADER_LOG1_REG_OFFSET		0x11c
#define EP_AER_HEADER_LOG2_REG_OFFSET		0x120
#define EP_AER_HEADER_LOG3_REG_OFFSET		0x124
#define EP_AER_HEADER_LOG4_REG_OFFSET		0x128
#define EP_AER_ROOT_ERR_COMMAND_REG_OFFSET	0x12c
#define EP_AER_ROOT_ERR_STATUS_REG_OFFSET	0x130
#define EP_AER_ROOT_ERR_ID_REG_OFFSET		0x134


#define AER_CORR_INT_ENABLE		0x00000001
#define AER_NONFATAL_INT_ENABLE		0x00000002
#define AER_FATAL_INT_ENABLE		0x00000004

#define PCI_CONFIG_HEADER_TYPE_0		0x0
#define PCI_CONFIG_HEADER_TYPE_1		0x1
#define PCI_RC_BUS_NUMBER			0x0
#define PCI_RC_DEVICE_NUMBER			0x0
#define PCI_RC_FUNCTION_NUMBER			0x0
#define PCI_RC_DEVICE_FUNCTION			0x0
#define PCI_PROTOCOL_LAYER_AER			0x0
#define PCI_PAXB_RC_BRIDGE_CONTROL_REG_OFFSET		0x3C
#define PCI_PAXB_RC_BRIDEG_CONTROL_SEC_SERR_EN 	(1 << 17)	
#define PCI_PAXB_RC_DEVICE_STATUS_CONTROL_REG_OFFSET	0xb4
#define PCI_PAXB_RC_DEVICE_STATUS_CONTROL_NFATAL_ERR_REPORT_EN (1 << 1)
#define PCI_PAXB_RC_DEVICE_STATUS_CONTROL_FATAL_ERR_REPORT_EN (1 << 2)
#define PCI_PAXB_RC_CAP_CONTROL			0xC8


#define RC_AER_CORR_ERR_MASK_ANFM	(1 << 13)

/* Interrupt bit definition */
#define RC_AER_STATUS_CORR_ERR_INTERRUPT		0x00000001
#define RC_AER_STATUS_MULTI_CORR_ERR_INTERRUPT		0x00000002
#define RC_AER_STATUS_FATAL_NONFATAL_INTERRUPT		0x00000004
#define RC_AER_STATUS_MULTI_FATAL_NONFATAL_INTERRUPT	0x00000008
#define RC_AER_STATUS_FATAL_UNCORR_ERR_INTERRUPT	0x00000010
#define RC_AER_STATUS_NONFATAL_ERR_INTERRUPT		0x00000020
#define RC_AER_STATUS_FATAL_ERR_INTERRUPT		0x00000040

/* FATAL UNCORRECTABLE INTERRUPT BIT definition */
#define RC_AER_STATUS_UCORR_ERR_DLPES_INTERRUPT		0x00000010
#define RC_AER_STATUS_UCORR_ERR_PTLPS_INTERRUPT		0x00001000
#define RC_AER_STATUS_UCORR_ERR_FCPES_INTERRUPT		0x00002000
#define RC_AER_STATUS_UCORR_ERR_CTS_INTERRUPT		0x00004000
#define RC_AER_STATUS_UCORR_ERR_CAS_INTERRUPT		0x00008000
#define RC_AER_STATUS_UCORR_ERR_UCS_INTERRUPT		0x00010000
#define RC_AER_STATUS_UCORR_ERR_ROS_INTERRUPT		0x00020000
#define RC_AER_STATUS_UCORR_ERR_MTLPS_INTERRUPT		0x00040000
#define RC_AER_STATUS_UCORR_ERR_ECRCS_INTERRUPT		0x00080000
#define RC_AER_STATUS_UCORR_ERR_URES_INTERRUPT		0x00100000

/* CORRECTABLE INTERRUPT BIT definition */
#define RC_AER_STATUS_CORR_ERR_RX_INTERRUPT		0x00000001
#define RC_AER_STATUS_CORR_ERR_BAD_TLP_INTERRUPT	0x00000040
#define RC_AER_STATUS_CORR_ERR_BAD_DLLP_INTERRUPT	0x00000080
#define RC_AER_STATUS_CORR_ERR_RPLAY_NUM_ROL_INTERRUPT	0x00000100
#define RC_AER_STATUS_CORR_ERR_RPLAY_TIMER_TO_INTERRUPT	0x00001000
#define RC_AER_STATUS_CORR_ERR_ADVSRY_INTERRUPT		0x00002000

#endif /* _PCIE_AER_IPROC_H_ */
